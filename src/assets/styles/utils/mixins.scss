@mixin isFlex($align: center, $justify: center, $direction: row, $wrap: wrap) {
	display: flex;
	align-items: $align;
	justify-content: $justify;
	flex-direction: $direction;
	flex-wrap: $wrap;
}

@mixin bgImage($url, $repeat: no-repeat, $position: center, $size: initial) {
	background-image: url($url);
	background-repeat: $repeat;
	background-position: $position;
	background-size: $size;
}

@mixin font-face($font-name, $font-file, $font-style, $font-weight) {
	@font-face {
		font-family: '#{$font-name}';
		src: url('../fonts/#{$font-file}.eot');
		src:
			url('../fonts/#{$font-file}.eot?#iefix') format('embedded-opentype'),
			url('../fonts/#{$font-file}.woff') format('woff'),
			url('../fonts/#{$font-file}.ttf') format('truetype');
		font-style: #{$font-style};
		font-weight: #{$font-weight};
		text-rendering: optimizeLegibility;
	}
}

@mixin clearfix() {
	zoom: 1;

	&:before,
	&:after {
		content: " "; // 1
		display: table; // 2
	}

	&:after {
		clear: both;
	}
}

@mixin media($width, $option:0) {
	@if $option==0 {
		@media (max-width: $width) {
			@content;
		}
	}

	@else if $option==1 {
		@media (min-width: $width + 1px) {
			@content;
		}
	}
}

@mixin mediaH($height, $option:0) {
	@if $option==0 {
		@media (max-height: $height) {
			@content;
		}
	}

	@else if $option==1 {
		@media (min-height: $height + 1px) {
			@content;
		}
	}
}

@mixin mediaWH($width, $height, $option:0) {
	@if $option==0 {
		@media (max-height: $height) and (max-width: $width) {
			@content;
		}
	}

	@else if $option==1 {
		@media (min-height: $height + 1px) and (min-width: $width + 1px) {
			@content;
		}
	}

	@else if $option==2 {
		@media (min-width: $width + 1px) and (max-height: $height) {
			@content;
		}
	}
}

@mixin placeholder {
	&::-webkit-input-placeholder {
		@content;
	}

	&:-moz-placeholder {
		/* Firefox 18- */
		@content;
	}

	&:-ms-input-placeholder {
		@content;
	}
}

@mixin posReset {
	position: absolute;
	top: 0;
	bottom: 0;
	left: 0;
	right: 0;
}
